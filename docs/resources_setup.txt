############################# RESOURCE FILE SET UP #############################

This file explains how to set up the 'properties/resources.json' file

If you haven't created yet the 'properties' directory, please read how to do it
in the 'docs/instructions.txt' file

The 'properties/resources.json' file purpose, is to contain all the resources
needed to the program for connecting to the database and other machine/user
dependent data used in the application, such as the logger set up.

You can find a structure of the 'properties/resources.json' in the 'sample'
directory that you can copy and paste into the 'properties' directory and fill in
with your data.

The 'properties/resources.json' has four JSON object:

    - logger: contains logger settings
    - server: contains server settings
    - users:  contains database's users credential
    - models: contains sensor models

############################# LOGGER #############################

The logger object is actually not used yet, but is still implemented for some
future release.

You have to put inside:

    - path:     path to your log directory ( please note that it must be a directory, not a file )
    - level:    default logging level ( see: https://docs.python.org/3/library/logging.html#logging-levels )
    - format:   logger format string ( see: https://docs.python.org/3/library/logging.html#formatter-objects )
    - mode:     the mode in which the file is opened ("a": append, "w": write)

############################# SERVER #############################

The server object defines the basic server information for connecting to the
database. The application relies on 'psycopg2' module for connecting to the
database (see: https://pypi.org/project/psycopg2/ )

You have to put inside:

    - host:     the server host name
    - port:     the port number through which opening server connection
    - dbname:   tha name of the database on the server you want to connect

############################# USERS #############################

The users object defines the 'username: password' attributes for all the users
you want to connect with to the database.
In this list you have to put only valid usernames defined in your postgreSQL DBMS.
If you try to run the application with some username that is not in this list,
the run will fail.

Please, see 'sample/resources.json' for practical examples.

############################# MODELS #############################

The models object defines the sensor models that can be found in the database
so that the application knows the valid models without hard coding it in the code.

Sensor models are divided into:

    - mobile:   list of all the mobile (portable) sensor models
    - station:  list of all the fixed (station) sensor models


Please, see 'sample/resources.json' for practical examples.
