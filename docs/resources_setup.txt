############################# RESOURCE FILE SET UP #############################

This file explains how to set up the 'properties/resources.json' file

If you haven't created yet the 'properties' directory, please read how to do it
in the 'docs/instructions.txt' file

The 'properties/resources.json' file purpose, is to contain all the resources
needed to the program for connecting to the database and other machine/user
dependent data used in the application, such as the logger set up.

You can find a structure of the 'properties/resources.json' in the 'sample'
directory that you can copy and paste into the 'properties' directory and fill in
with your data.

The 'properties/resources.json' has four JSON object:

    - logger: contains logger settings
    - server: contains server settings
    - users:  contains database's users credential
    - models: contains sensor models

############################# LOGGER #############################

The logger object is actually not used yet, but is still implemented for some
future release.

You have to put inside:

    - path:     path to your log directory ( please note that it must be a directory, not a file )
    - level:    default logging level ( see: https://docs.python.org/3/library/logging.html#logging-levels )
    - format:   logger format string ( see: https://docs.python.org/3/library/logging.html#formatter-objects )
    - mode:     the mode in which the file is opened ("a": append, "w": write)

############################# SERVER #############################

The server object defines the basic server information for connecting to the
database. The application offers a 'psycopg2' adapter for connecting to the
database.

You have to put inside:

    - host:     the server host name
    - port:     the port number through which opening server connection
    - dbname:   tha name of the database on the server you want to connect

############################# PERSONALITY #############################

The personality object defines the personalities available to the program.
To each personality is associated a JSON object in the form of '{ "username": "usr1", "password": "pwd1"}'.

Username and password are intended to be your DBMS valid credential for connecting to it.

Please, see 'sample/resources.json' for practical examples.
